// EN

.......................................................................................................

DESCRIPTION:

Given an array (arr) as an argument complete the function countSmileys that should return the total number of smiling faces.

Rules for a smiling face:

Each smiley face must contain a valid pair of eyes. Eyes can be marked as : or ;
A smiley face can have a nose but it does not have to. Valid characters for a nose are - or ~
Every smiling face must have a smiling mouth that should be marked with either ) or D
No additional characters are allowed except for those mentioned.

Valid smiley face examples: :) :D ;-D :~)
Invalid smiley faces: ;( :> :} :]

Example:

countSmileys([':)', ';(', ';}', ':-D']);       // should return 2;
countSmileys([';D', ':-(', ':-)', ';~)']);     // should return 3;
countSmileys([';]', ':[', ';*', ':$', ';-D']); // should return 1;

Note:

In case of an empty array return 0.
You will not be tested with invalid input (input will always be an array).
Order of the face (eyes, nose, mouth) elements will always be the same.

--------------------------------------------------------------------------------------------------------

// RU

........................................................................................................

Описание:

Учитывая массив (arr) в качестве аргумента, завершите функцию countSmileys, которая должна вернуть общее количество улыбающихся лиц.

Правила улыбающегося лица:

Каждый смайлик должен содержать допустимую пару глаз. Глаза могут быть отмечены как : или ;
У смайлика может быть нос, но не обязательно. Допустимые символы для носа - или ~
Каждое улыбающееся лицо должно иметь улыбающийся рот, который должен быть отмечен знаком ) или D.
Не допускается использование дополнительных символов, кроме упомянутых.

Допустимые примеры смайлов: :) :D ;-D :~)
Недопустимые смайлики: ;( :> :} :]

Пример:

countSmileys([':)', ';(', ';}', ':-D']); // должно вернуть 2;
countSmileys([';D', ':-(', ':-)', ';~)']); // должно вернуть 3;
countSmileys([';]', ':[', ';*', ':$', ';-D']); // должно вернуть 1;

Примечание:

В случае пустого массива верните 0.
Вы не будете тестироваться с недопустимым вводом (ввод всегда будет массивом).
Порядок элементов лица (глаза, нос, рот) всегда будет одинаковым.